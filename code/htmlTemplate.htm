<html>
<head>
	<meta charset="utf-8">
	<title>NKHP - New Kingdom Hieratic Paleographies</title>
</head>
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.12.1/css/jquery.dataTables.css">
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/fixedheader/3.2.4/css/fixedHeader.dataTables.min.css">
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
<script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/1.12.1/js/jquery.dataTables.js"></script>
<script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/responsive/2.3.0/js/dataTables.responsive.min.js"></script>
<script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/fixedheader/3.2.4/js/dataTables.fixedHeader.min.js"></script>
<script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/plug-ins/1.12.1/sorting/natural.js"></script>
<script src="https://cdn.jsdelivr.net/npm/vanilla-lazyload@17.8.3/dist/lazyload.min.js"></script>

<style>
/* Pour la progress bar (ou progress circle) du chargement */
#loading_container {
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 100vh;
  background-color: #0d0d0d;
}

#loading_progressbar {
  position: relative;
  width: 170px;
  height: 170px;
  margin: 1em;
  transform: rotate(-90deg);
}


#loading_progressbar_svg {
  position: relative;
  width: 100%;
  height: 100%;
}

#loading_circle {
  width: 100%;
  height: 100%;
  stroke-width: 10;
  stroke: white;
  stroke-linecap: round;
  fill: none;
}

#loading_text {
  position: absolute;
  top: 50%;
  left: 50%;
  padding: 0.25em 0.5em;
  color: white;
  font-family: Arial, Helvetica, sans-serif;
  border-radius: 0.25em;
  text-align: center;
  transform: translate(-55%, -55%) rotate(90deg);
}

/* Language */
#lang-switch img {
  width: 32px;
  height: 32px;
  opacity: 0.5;
  transition: all .5s;
  margin: auto 3px;
  -moz-user-select: none;
  -webkit-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

#lang-switch img:hover {
  cursor: pointer;
  opacity: 1;
}

.fr_lang,
.en_lang {
  display: none;
  transition: display .5s;
}

.active-lang {
  display: flex;
  transition: display .5s;
}

span.active-lang {
  display: inline;
}

.active-flag {
  transition: all .5s;
  opacity: 1 !important;
}

.thanks a:link {
  text-decoration: none;
  color: skyblue;
}

.thanks a:visited {
  text-decoration: none;
  color: skyblue;
}

.thanks a:hover {
  text-decoration: underline;
}

img {
 padding: 3px;
}
.exercisesTable {
  margin-left: 60
}

table {
	border-collapse:collapse;
}

ul{ margin-top:0; margin-bottom:0 }

.thanks li {
   margin-bottom: 3px;  
   margin-top: 3px;  ¬≤
}

.topButtons {
	position:absolute;
	top:0;
	right:10px;
	height:30px;
	width:120px;
	cursor:pointer;
	z-index:2;
	display:flex;
}

.topButton {
	position:relative;
	display: inline-block;
	width:30px;
	height:30px;
}

.topButton img {
	width:100%;
	height:100%;
	object-fit:contain;
}

#settingsSidebar {
  position: fixed;
  top: 0;
  right: 0;
  width: 40%;
  height: 100%;
  opacity:0.98;
  background-color:#d3d3d3;
  z-index: 10;
  display: none;
  overflow-y: scroll;
}

#drillSidebar {
  position: fixed;
  top: 0;
  right: 0;
  width: 50%;
  height: 100%;
  opacity:1;
  background-color:#d3d3d3;
  z-index: 10;
  display: none;
  overflow-y: scroll;
}

#thanksSidebar {
  position: fixed;
  padding: 10px;
  top: 0;
  right: 0;
  width: 50%;
  height: 100%;
  opacity: 1;
  /*background-color:#d3d3d3;*/
  background-color: black;
  color: #fff;  
  z-index: 10;
  display: none;
  overflow-y: scroll;
}

.closebtn {
  position: absolute;
  top: 0;
  right: 15px;
  font-size: 32px;
  margin-left: 50px;
  text-decoration: none;
  color: #818181;
  display: block;
}

.tableInSidebar {
	margin-top: 35px;
	margin-left: auto;
	margin-right:auto;
}

.topRowParent {
  text-align: center;
}
.topRowChild {
  display: inline-block;
}


.hier {
  position: relative;
  display: inline-block;
  width: 50px;
  height: 50px;
  margin: 1px;
}

.hier img {
    max-width: 100%;
    max-height: 100%;
    width: 100%;
    height: 100%;
    padding: 0px;
    object-fit: contain;
}

/* Tooltip text */
.hier .tooltiptext {
  visibility: hidden;
  width: 120px;
  background-color: black;
  color: #fff;
  text-align: center;
  padding: 5px 0;
  border-radius: 6px;
  position: absolute;
  right: 105%;
  z-index: 1;
}

/* Show the tooltip text when you mouse over the tooltip container */
.hier:hover .tooltiptext {
  visibility: visible;
}

.topButton .tooltiptext {
  visibility: hidden;
  width: 120px;
  background-color: black;
  color: #fff;
  text-align: center;
  padding: 5px 0;
  border-radius: 6px;
  position: absolute;
  right: 65%;
  top: 65%;
  z-index: 3;
}

.topButton:hover .tooltiptext {
  visibility: visible;
}

/* Registres de textes */
/*--INSERTTEXTREGISTRIESCSSHERE--*/
XXXTEXTREGISTRIESCSSXXX
/*--ENDOFTEXTREGISTRIESCSS--*/

</style>

<script type="text/javascript">
const lazyLoadMethod="XXXLAZYLOADMETHODXXX";
if (lazyLoadMethod=="OBSERVER") {
	document.addEventListener("DOMContentLoaded", function() {
		doLazyLoad()
	})
} else if (lazyLoadMethod=="VANILLA") {
	var lazyLoadInstance=new LazyLoad({});
}

function doLazyLoad() {
	if (lazyLoadMethod=="OBSERVER") {
		var lazyloadImages;    
		lazyloadImages = document.querySelectorAll(".lazy");
		console.log("lazyloadImages has " + lazyloadImages.length + " images");
		var imageObserver = new IntersectionObserver(function(entries, observer) {
		  entries.forEach(function(entry) {
			if (entry.isIntersecting) {
			  var image = entry.target;
			  if (image.src==undefined || image.src=="") {image.src = image.dataset.src;}
			  image.classList.remove("lazy");
			  image.removeAttribute("data-src");
			  imageObserver.unobserve(image);
			}
		  });
		});
		lazyloadImages.forEach(function(image) {
		  imageObserver.observe(image);
		})
	} else if (lazyLoadMethod=="VANILLA") {
		lazyLoadInstance.update();
	}
}

function translitUnicodeToMdc(s) {
	dTransliteration2Ascii = {'·∏™':'#', 'HÃ≤':'$','·πÆ':'*','·∏é':'+','·∏§':'@','Íú£':'A','≈ö':'C','·∏è':'D','·∏•':'H','·∏≤':'Q','≈°':'S','·πØ':'T','hÃ≠':'V','·∫ñ':'X','ìèû':'\\','≈†':'^','Íú•':'a','≈õ':'c','·ªâ':'i','·∏≥':'q','·π±':'v','·∏´': 'x'}
    //dTransliteration2Ascii = {'H':'!','·∏™':'#', 'HÃ≤':'$','S':'%','T':'&','·πÆ':'*','·∏é':'+','·∏§':'@','Íú£':'A','≈ö':'C','·∏è':'D','·∏•':'H','Q':'O','·∏≤':'Q','≈°':'S','·πØ':'T','hÃ≠':'V','·∫ñ':'X','ìèû':'\\','≈†':'^','D':'_','Íú•':'a','≈õ':'c','·ªâ':'i','q':'o','·∏≥':'q','·π±':'v','·∏´': 'x'}
    var sOut="";
	//repr√©sentations multiples du yod
	s=s.replace("\u0069\u0486","\u1EC9");
	s=s.replace("\u0069\u0313","\u1EC9");
	s=s.replace("j","i");
    for (var i = 0; i < s.length; i++) {
        var c=s[i];
        if (c in dTransliteration2Ascii) {
			//console.log("c is " + c + " and is converted to "+dTransliteration2Ascii[c]);
            sOut=sOut+dTransliteration2Ascii[c];
        } else {
            sOut = sOut + c;
        }
    }
    return sOut;
}

function hideOrShowSidebar(sSideBar,blShow) {
	document.getElementById(sSideBar+"Sidebar").style.display=blShow?"block":"none";
}

function generateDrill(nExercises) {
 //on va cr√©er un √©l√©ment avec l'id drill qu'on supprime √† chaque d√©but d'ex√©cution
 var divplayarea = document.getElementById("playarea")
 var olddrill=document.getElementById("drill")
 if (olddrill!=null) {
	olddrill.remove()
 }
 
 blOnlyFrequent = document.getElementById("check_onlyfrequent").checked;
 blIncludeLigatures = document.getElementById("check_includeLigatures").checked;
 minFrequent = Number(document.getElementById("minFrequent").value);
 
 
 var hieros={};
 var arrHiera=[];
 var arrHieraChosen=[];
 /* on construit un hashtable de tous les hi√©roglyphes avec leur fr√©quence au d√©part des donn√©es dataTable */
 for (var i=0;i<datatable.rows().data().length;i++) {
    hrow=datatable.rows().data()[i];
	//rowid=datatable.row(i).node().getAttribute("id").substring(3);
	//console.log("Hieros of " + rowid + " has freq " + hrow[4] + " and translit " + hrow[3]);
    //hieros[rowid]=  {'freq': hrow[4], 'translit': hrow[3]}
	hieros[hrow.DT_RowId.substring(3)]={'freq': hrow[4], 'translit': hrow[3], 'lig': hrow[13]};
 }
 
 // on utilise la hashtable ht de tous les hi√©ratogrammes 
 for (h in ht) {
    //console.log(ht[h])
    sFrequency="0"
	sLig = ""
	
    if (typeof hieros[ht[h]] != "undefined") {
		if ("freq" in hieros[ht[h]]) {
            sFrequency = hieros[ht[h]]["freq"];
        } 
		if ("lig" in hieros[ht[h]]) {
			sLig=hieros[ht[h]]["lig"];
		}
    } else {
        console.log("Prob with " + ht[h])
    }
    blInclude=true;
    if (sLig=="(lig)") {
        blInclude = blIncludeLigatures;
		//console.log(ht[h] + " is log so include = " + blInclude);
    } else {
        if (blOnlyFrequent) {
            blInclude = (Number(sFrequency) >= minFrequent)
        }
    }
	if (blInclude) {
		arrHiera.push(h);
	}
 }
 if (nExercises>arrHiera.length-1) {nExercises=arrHiera.length-1;}
 //cr√©er un tableau avec nExercises hi√©ratogrammes choisis au hasard
 for (var i=0; i<nExercises; i++) {
  indexChosen = Math.floor(Math.random() * arrHiera.length);
  arrHieraChosen.push(arrHiera[indexChosen]);
  arrHiera.splice(indexChosen,1);
 }
 divplay = document.createElement("div")
 divplay.setAttribute("id","drill")
 tb = document.createElement("table");
 tb.setAttribute("class","exercisesTable");
 tb.setAttribute("border","1");
 tb.setAttribute("id","drillTable");
 arrCols="col_hierato/col_mdc/col_hiero/col_translit".split("/")
 for (i=0;i<arrCols.length;i++) {
  tcol = document.createElement("col");
  tcol.setAttribute("class",arrCols[i]);
  tb.appendChild(tcol);
 }
  
 for (var i=0; i<arrHieraChosen.length; i++) {
	trow = document.createElement("tr");
	td=document.createElement("td");
    tdiv=document.createElement("div")
	tdiv.setAttribute("class","hier");
    //on va chercher l'image de l'hi√©ratogramme
    hie=ht[arrHieraChosen[i]];
    //imgSrc = "img/h"+arrHieraChosen[i]+".svg";
	imgSrc=imageSources[arrHieraChosen[i]];
    timg1=document.createElement("img");
    timg1.setAttribute("src",imgSrc);
    tdiv.appendChild(timg1);
	td.appendChild(tdiv);
    trow.appendChild(td);
    
    //on va chercher le code Gardiner
	td=document.createElement("td");
	ttext=document.createTextNode(hie);
	td.appendChild(ttext);
	trow.appendChild(td)

    //on va chercher l'image du hi√©roglyphe
	td=document.createElement("td");
    imgSrc = "img/"+hg[hie];
	timg2 = document.createElement("img");
	timg2.setAttribute("src",imgSrc);
	timg2.setAttribute("height","50");
	timg2.setAttribute("width","50");
	td.appendChild(timg2);
	trow.appendChild(td)

    td=document.createElement("td");
	//console.log(hie);
    td.innerHTML=hieros[hie]["translit"];
    trow.appendChild(td);
    
	tb.appendChild(trow);
 }
 
 //cacher les colonnes
 tb.getElementsByClassName("col_mdc")[0].style.visibility="collapse";
 tb.getElementsByClassName("col_hiero")[0].style.visibility="collapse";
 tb.getElementsByClassName("col_translit")[0].style.visibility="collapse";
 
 divplay.appendChild(tb);
 divplayarea.appendChild(divplay);
 
 document.getElementById("showAnswersButton").removeAttribute("hidden");
}
function showAnswers() {
 var tb=document.getElementById("drillTable");
 tb.getElementsByClassName("col_mdc")[0].style.visibility="";
 tb.getElementsByClassName("col_hiero")[0].style.visibility="";
 tb.getElementsByClassName("col_translit")[0].style.visibility="";
 document.getElementById("showAnswersButton").setAttribute("hidden","hidden");
}

function setDisplayedURL(s) {
	document.getElementById("cururl").href=s;
	document.getElementById("cururl").innerHTML=s;
}

function computeURL() {
	var sURL = document.URL.split('?')[0]	//basepath
	//add language
	var isFrench=$(".fr_lang").first().hasClass("active-lang");
	sURL+= isFrench?"?lang=fr":"?lang=en";
	
    var searchGardi=$("#searchGardi").val();
    var searchM√∂ller=$("#searchM√∂ller").val();
    var searchMdc=$("#searchMdc").val();
	var f="";
	
	
	
	
	var min = parseInt($("#minFrequent").val(),10);
	var blOnlyFrequent = $("#check_onlyfrequent")[0].checked;
    var blIncludeLigatures = $("#check_includeLigatures")[0].checked;
	var t="";
    //if ($("#check_matchexact")[0].checked) {m="exact";}	else	//default value is exact
	if ($("#check_matchcontains")[0].checked) {t="contains";}	else if ($("#check_matchregex")[0].checked) {t="regex";}
	if (t!="") {sURL+="&t="+t;}
	
	var f="";
	if ($("#check_filtersEXCLUSIVE")[0].checked) {f="exclusive"} else if ($("#check_filtersAND")[0].checked) {f="and"} else if ($("#check_filtersOR")[0].checked) {f="or"}
	sURL+="&f="+f;
	
    if (typeof(searchGardi)=="undefined") {searchGardi="";};
    if (typeof(searchM√∂ller)=="undefined") {searchM√∂ller=""};
    if (typeof(searchMdc)=="undefined") {searchMdc=""};
	searchMdc=translitUnicodeToMdc(searchMdc).replace("-","").replace(".","");
	if (searchGardi!="") {sURL+="&gardi="+encodeURIComponent(searchGardi)}
	if (searchM√∂ller!="") {sURL+="&moeller="+encodeURIComponent(searchM√∂ller)}
	if (searchMdc!="") {sURL+="&mdc="+encodeURIComponent(searchMdc)}
	
	if (blOnlyFrequent) { sURL+="&onlyfreq=1";}
	sURL+="&minfreq="+min;
	if (!blIncludeLigatures) {sURL+="&lig=0";}
	
	return sURL;
}

function switchLanguage(activeLang) {
	//console.log("Switching to "  + activeLang);
	otherLang=(activeLang=="fr")?"en":"fr";
    $("."+activeLang+"_lang").addClass("active-lang"); 
    $("."+otherLang+"_lang").removeClass("active-lang");
    $("#lang-switch ."+activeLang).addClass("active-flag");
    $("#lang-switch ."+otherLang).removeClass("active-flag");
	setDisplayedURL(computeURL());
}

document.onreadystatechange = function() {
	document.getElementById("loading_container").style.display=(document.readyState == "complete")?"none":"block";	
	document.getElementById("main").style.display=(document.readyState == "complete")?"block":"none";
    document.getElementById("playarea").style.visibility=(document.readyState == "complete")?"visible":"hidden";
	document.getElementById("urlarea").style.visibility=(document.readyState == "complete")?"visible":"hidden";
	
    if (document.readyState =="complete") {
			clearInterval(loaderInterval);
			loaderInterval = null;
			document.getElementById("topRow").style.textAlign="left";
			setDisplayedURL(document.URL);
            const params = Object.fromEntries(new  URLSearchParams(window.location.search));   
			applyPageParams(params);
    }
};


function applyPageParams(params) {
	var searchGardi = params["gardi"]; 
	var searchM√∂ller = params["moeller"]; 	
	var searchMdc = params["mdc"]; 			
	var searchType = params["t"];		//exact, contains or regex
	var filteringType = params["f"];
	var includeLigs = params["lig"]	;	//0 or 1
	var onlyFreq = params["onlyfreq"];
	var minFrequent = params["minfreq"];
	var lang = params["lang"];
	if (onlyFreq== null) {onlyFreq=0};
	if (minFrequent == null) {minFrequent=""};
	if (lang == null) {lang="fr"};
	if (searchGardi == null) {searchGardi=""};
	if (searchM√∂ller == null) {searchM√∂ller=""};
	if (searchMdc == null) {searchMdc=""};
	if (filteringType == null) {filteringType="or"};

	switchLanguage(lang);
	
	if (minFrequent !="") {$("#minFrequent").val(minFrequent);}
	$("#check_onlyfrequent")[0].checked=((onlyFreq==1)?true:false);
			
	if (includeLigs=="0") { $("#check_includeLigatures")[0].checked=false }

	if ((searchType!="exact") && (searchType!="contains") && (searchType!="regex")) {searchType="exact"};
	arr=["exact","contains","regex"];
	$("#check_match"+searchType)[0].checked=true;		
	for (i=0;i<arr.length;i++) {
			if (arr[i]!=searchType) { 
					$("#check_match"+arr[i])[0].checked=false; 
			}
	}

	if ((filteringType!="exclusive") && (filteringType!="and") && (filteringType!="or")) {filteringType="or"};
	filteringType=filteringType.toUpperCase();
	arr=["EXCLUSIVE","OR","AND"];
	$("#check_filters"+filteringType)[0].checked=true;		
	for (i=0;i<arr.length;i++) {
			if (arr[i]!=filteringType) { 
					$("#check_filters"+arr[i])[0].checked=false; 
			}
	}

	{$("#searchGardi").val(searchGardi);}
	{$("#searchM√∂ller").val(searchM√∂ller);}
	{$("#searchMdc").val(searchMdc);}

   if (Object.keys(params).length >0 ) {
			updateDisplay();
	}
}

function emptyAll() {
	applyPageParams({"gardi":"","moeller":"","mdc":"","t":"exact","filteringType":"or","includeLigs":"1","minfreq":"100","onlyfreq":"0","lang":"fr"});
}

function changeNoColor() {
    toggleHieratogramsTransparency($("#check_nocolor")[0].checked);
}

function changeCategClassVisibilities() {
    arrCategs=sCategClasses.split("/");
    for (kk=0 ; kk<arrCategs.length ; kk++) {
        blIsCurClassChecked = $("#check_cat"+arrCategs[kk])[0].checked;

        toggleClassVisibility(arrCategs[kk],blIsCurClassChecked);
    }
    updateDisplay();
}

function getUsualColorForTextCategory(sClassName) {
 console.log("Trying to find color for " + sClassName);
 for (var ii=2;ii<document.styleSheets.length;ii++) {
  for (var jj=0;jj<document.styleSheets[ii].cssRules.length;jj++) {
   if (document.styleSheets[ii].cssRules[jj].cssText.startsWith(".checkboxfor"+sClassName)) {
     return document.styleSheets[ii].cssRules[jj].style.getPropertyValue("background-color");
   }
  }
 }
}

function toggleHieratogramsTransparency(blTransparent) {
 var arrCategs=sCategClasses.split("/");
 for (var kkk=0;kkk<arrCategs.length;kkk++) {
    sClassName=arrCategs[kkk];
    for (var i=2;i<document.styleSheets.length;i++) {
      for (var j=0;j<document.styleSheets[i].cssRules.length;j++) {
       if (document.styleSheets[i].cssRules[j].cssText.startsWith("."+sClassName)) {
         if (blTransparent) {
            document.styleSheets[i].cssRules[j].style.setProperty("background-color","transparent");
         } else {
            sColor=getUsualColorForTextCategory(sClassName);
            console.log("Usual color for " + sClassName + " is " + sColor);
            document.styleSheets[i].cssRules[j].style.setProperty("background-color",sColor);
         }
       }
      }
    }
 }
}


function toggleClassVisibility(sClassName,blVisible) {
 for (i=2;i<document.styleSheets.length;i++) {
  for (j=0;j<document.styleSheets[i].cssRules.length;j++) {
   if (document.styleSheets[i].cssRules[j].cssText.startsWith("."+sClassName)) {
      s="";
      if (blVisible) {s=500; d="inline-block";} else {s=0; d="none";}
      document.styleSheets[i].cssRules[j].style.setProperty("display",d);
      document.styleSheets[i].cssRules[j].style.setProperty("max-height",s);
      document.styleSheets[i].cssRules[j].style.setProperty("max-width",s);      
    }
  }
 }
}

     
 

function datatablesRowCallbackFunction( row, aData, iDisplayIndex ) {
	if (lazyLoadMethod=="DATATABLESCALLBACK") {
		if ($('td:eq(2) > img', row)[0].getAttribute("src") == null) {
			/* image not initialized yet */
			//sGardi=row.getAttribute("id").substring(3);
			//imgSrc = "img/"+hg[sGardi];
			var img=$('td:eq(2) > img', row)[0];
			imgSrc=img.getAttribute("data-src");
			img.setAttribute("src",imgSrc);
			img.classList.remove("lazy");
			img.removeAttribute("data-src");
			hi=row.getElementsByClassName("hier");
			for (i=0;i<hi.length;i++) {
			  hie=hi[i];
			  //id=hie.getAttribute("id");
			  //imgSrc="img/h"+id+".svg";
			  var img= hie.getElementsByTagName("img")[0];
			  imgSrc=img.getAttribute("data-src");
			  //hie.getElementsByTagName("img")[0].setAttribute("src",imgSrc);
			  img.setAttribute("src",imgSrc);
			  img.classList.remove("lazy");
			  img.removeAttribute("data-src");
			}
		}
		return row;
	}
};

</script>
<body>
<div id="loading_container">
	<div id="loading_progressbar">
		<svg id="loading_progressbar_svg">
			<circle id="loading_circle" cx="80" cy="80" r="60" stroke-dasharray="0 375" stroke-dashoffset="283"> </circle>
		</svg>
		<span id="loading_text">NKHP loading</span>
	</div>
</div>
<div id="main" style="display:none">
<div class="topRowParent" id="topRow">
	<div class="topRowChild" id="urlarea" style="visibility:hidden;"><span class="fr_lang"><b>URL du filtre en cours:</b></span><span class="en_lang"><b>URL of current filter:</b></span> <a id="cururl" href='placeholder'>placeholder</a></div>
</div>
<div id="drillSidebar"><a href="javascript:void(0)" class="closebtn" onclick="hideOrShowSidebar('drill',false)">&times;</a>
	<div id="playarea" style="visibility:hidden;">
		<center>
			<button onclick="generateDrill(30)"><div class="fr_lang">G√©n√®re exercices</div><div class="en_lang">Generate random test</div></button>
			<button id="showAnswersButton" hidden onclick="showAnswers()"><div class="fr_lang">Montre solutions</div><div class="en_lang">Show answers</div></button>
		</center>
	</div>
</div>
<div id="thanksSidebar"><a href="javascript:void(0)" class="closebtn" onclick="hideOrShowSidebar('thanks',false)">&times;</a>
<br/>
<script>

//le chargement peut √™tre mesur√© de la fa√ßon suivante: d'abord la taille du innerHTML augmente jusqu'√† environ 4.5 MB, puis les datatables interviennent et on retombe √† 600K environ (passage de <table> √† datatable)
// on va donc consid√©rer que la partie initiale d'augmentation de la taille repr√©sente 0-80%, puisque quand √ßa diminue, on a atteint les 90% (les 10 derniers pourcents servant au rendu visuel)
maxReached=0;
function updateLoadProgressBar() {
	nMax=XXXMAXSIZEXXX;
	curSize =document.documentElement.innerHTML.length;
	console.log(curSize);
	if (curSize<maxReached*0.9) {nPercent=90;}	//ceci signifie que la taille a significativement diminu√© -> on a d√©j√† process√© une partie des datatables
	else if (curSize>maxReached) {maxReached=curSize; nPercent=Math.min(maxReached/nMax*80,80);};
    if (nPercent < 0) { nPercent = 0;}
    if (nPercent > 100) { nPercent = 100;}
	document.getElementById("loading_text").innerHTML="NKHP loading " + parseFloat(nPercent).toFixed(0)+"%";
	var circle = document.querySelector("#loading_circle")
    var r = circle.getAttribute('r');
    var c = Math.PI*(r*2);
	var circumference = 2 * Math.PI * r;
	var strokeDasharray = (nPercent /100) * circumference;
    circle.setAttribute('stroke-dasharray', [
      strokeDasharray,
      circumference - strokeDasharray
    ]);
    circle.setAttribute('stroke-dashoffset', 0);
}
loaderInterval=setInterval(updateLoadProgressBar, 100);

</script>

<b>NKHP (New Kingdom Hieratic Paleographies)</b>
<div class="fr_lang"><ul class="thanks">
	<li>NKHP est un outil d'apprentissage du hi√©ratique du Nouvel Empire et du d√©but de la TPI, d√©velopp√© par <a href="mailto:philippe.hennebert@student.uliege.be">Philippe <font style="font-variant: small-caps">Hennebert</font></a>, √©tudiant √† l'Universit√© de Li√®ge, sous la supervision de <a class="thanks" href="https://www.uliege.be/cms/c_9054334/fr/repertoire?uid=u192490">St√©phane <font style="font-variant: small-caps">Polis</font></a>.</li>
	<li>Cet outil permet d'explorer de fa√ßon dynamique les pal√©ographies de Georg <font style="font-variant: small-caps">M√∂ller</font> (vol. II) et de Stefan <font style="font-variant: small-caps">Wimmer</font>, notamment via des filtres et recherches complexes, permettant notamment des comparaisons</li>
	<li>Un module d'entra√Ænement √† la reconnaissance de graph√®mes est √©galement accessible √† l'√©tudiant (g√©n√©ration al√©atoire de listes de graph√®mes √† identifier).</li>
</ul></div>
<div class="en_lang"><ul class="thanks">
	<li>NKHP is a learning tool for New Kingdom (and early TIP) hieratic, d√©veloped by <a href="mailto:philippe.hennebert@student.uliege.be">Philippe <font style="font-variant: small-caps">Hennebert</font></a>, student at Li√®ge University, under the supervision of <a class="thanks" href="https://www.uliege.be/cms/c_9054334/fr/repertoire?uid=u192490">St√©phane <font style="font-variant: small-caps">Polis</font></a>.</li>
	<li>This tool aims at exploring dynamically Georg <font style="font-variant: small-caps">M√∂ller</font>'s and Stefan <font style="font-variant: small-caps">Wimmer</font>'s paleographies, through filters and complex searches allowing for sign comparisons.</li>
	<li>A training module for grapheme recognition is also available to interested students, randomly generating graphemes lists.</li>
</ul></div>

<br/>
<b><div class="fr_lang">Remerciements</div><div class="en_lang">Thanks</div></b>
<div class="fr_lang"><ul class="thanks">
	<li>Merci √† l'√©quipe du projet  <a href="https://aku-pal.uni-mainz.de/">AKU</a> de mettre √† disposition sur leur plateforme en ligne de nombreux graph√®mes sous licence CC-BY 4.0, ainsi que des m√©tadonn√©es extensives, mais aussi de nous avoir envoy√© des scans de haute qualit√© de la pal√©ographie de Stefan <font style="font-variant: small-caps">Wimmer</font>.</li>
	<li>Merci √† Stefan Jakob <font style="font-variant: small-caps">Wimmer</font> de nous avoir autoris√©s √† utiliser les formes hi√©ratiques des planches de sa pal√©ographie.</li>
</ul></div>
<div class="en_lang"><ul class="thanks">
	<li>Thanks to the <a href="https://aku-pal.uni-mainz.de/">AKU</a> project team for providing an online platform with many graphemes under CC-BY 4.0 license, as well as extensive metadata, but also for sending us high-quality scans of Stefan<font style="font-variant: small-caps">Wimmer</font>'s paleography.</li>
	<li>Thanks to Stefan Jakob <font style="font-variant: small-caps">Wimmer</font> for letting us use the hieratic shapes scanned from his paleographic plates.</li>
</ul></div>

<br/>
<b><div class="fr_lang">Bibliographie</div><div class="en_lang">Bibliography</div></b>
<ul class="thanks">
	<li>Ursula <font style="font-variant: small-caps">Verhoeven</font> et al, <a href="https://aku-pal.uni-mainz.de/">Alt√§gyptische Kursivschriften Projekt (AKU-PAL)</a></li>
	<li>Georg <font style="font-variant: small-caps">M√∂ller</font>, <i>Hieratische Pal√§ographie. Die Aegyptische Buchschrift in ihrer Entwicklung von der f√ºnften Dynastie bis zur R√∂mischen Kaiserzeit </i>I‚ÄìIII, Leipzig 1909-1912. I-IV: Leipzig 1927-1936, Neudruck Osnabr√ºck 1965.</li>
	<li>Stefan Jakob <font style="font-variant: small-caps">Wimmer</font>, <i>Hieratische Pal√§ographie der nicht-literarischen Ostraka der 19. und 20. Dynastie</i>, √Ñgypten und Altes Testament 28, Wiesbaden 1995.
	<li>Serge <font style="font-variant: small-caps">Rosmorduc</font> (2014). <em>JSesh Documentation</em>. [online] disponible sur: <a href="http://jseshdoc.qenherkhopeshef.org">http://jseshdoc.qenherkhopeshef.org</a> [acc√®s 18 f√©vrier 2023]</li>
	<li>Projet Ramses de l'Universit√© de Li√®ge, <a href="http://ramses.ulg.ac.be/">http://ramses.ulg.ac.be/</a> [online - acc√®s 18 f√©vrier 2023]</li>
	<li>Simone <font style="font-variant: small-caps">Gerhards</font>, Tobias <font style="font-variant: small-caps">Konrad</font>. ‚ÄûVon Bildern und Bienen ‚Äì Methodenreflexionen zur digitalen pal√§ografischen Analyse des Hieratischen‚Äú. In <i>√Ñgyptologische ‚ÄûBinsen‚Äú-Weisheiten IV. Hieratisch des Neuen Reiches: Akteure, Formen und Funktionen. Akten der internationalen Tagung in der Akademie der Wissenschaften und der Literatur | Mainz im Dezember 2019,</i> (eds. Svenja A. G√ºlden, Tobias Konrad, und Ursula Verhoeven), pp. 183‚Äì219. Abhandlungen der Geistes- und Sozialwissenschaftlichen Klasse ‚Äì Einzelver√∂ffentlichungen 17. Stuttgart: Franz Steiner Verlag, 2022</li>
	<li>Jean-Paul <font style="font-variant: small-caps">Crosefinte</font>, Sonia <font style="font-variant: small-caps">Labetouille</font>, Estelle <font style="font-variant: small-caps">Renaud</font>, Fran√ßois <font style="font-variant: small-caps">User</font>, <i>Actualisation de l'ouvrage de <font style="font-variant: small-caps">George M√∂ller</font> Hieratische Pal√§ographie - Tome II, de la XVIIIe dynastie (Thoutmosis III) √† la XXIe dynastie</i> [online] disponible sur <a href="http://ecriture.egypte.free.fr/ressources/Moller-hieratique_actualise_tome2.pdf">http://ecriture.egypte.free.fr/ressources/Moller-hieratique_actualise_tome2.pdf</a> [acc√®s 18 f√©vrier 2023]</li>
	<li>Christian <font style="font-variant: small-caps">Casey</font>, Mdc2Unicode [online] disponible sur <a href="https://github.com/christiancasey/MdC2Unicode">https://github.com/christiancasey/MdC2Unicode</a> [acc√®s 18 f√©vrier 2023]</li>

</ul>
</div>
<div id="settingsSidebar"><a href="javascript:void(0)" class="closebtn" onclick="hideOrShowSidebar('settings',false)">&times;</a>
	<table class="tableInSidebar" border="1">
		<tr>
			<td></td>
			<td><div id="lang-switch"><img src="imgstatic/french.png" class="fr" onclick="switchLanguage('fr')" /> <img src="imgstatic/english.png" class="en" onclick="switchLanguage('en')" /></div></td>
    	</tr>
		<tr><td style="vertical-align:top"><input type="checkbox" id="check_matchexact" checked></td><td><b class="fr_lang">Correspondance exacte</b><b class="en_lang">Exact match</b>
			<div class="fr_lang"><ul>
				<li>Affiche tous les signes dont une des valeurs correspond exactement au terme de recherche.</li>
				<li>Utiliser des virgules pour s√©parer plusieurs termes de recherche et comparer des signes. Par exemple, dans la colonne Gardiner, la valeur F31,F40 affichera les graph√®mes correspondants √† F31 ET ceux correspondant √† F40</li>
				<li>Dans la colonne Gardiner, la valeur Aa1 Z4 (ou Aa1+Z4 - tout s√©parateur est accept√© sauf la virgule) affiche uniquement le groupe compos√© de Aa1 suivi de Z4</li>
				<li>Dans la colonne M√∂ller, la valeur XXXIX filtrera la ligature XXXIX de la pal√©ographie de M√∂ller. La valeur 575+575 est √©quivalente (t t), ou X1+X1 dans la colonne Gardiner</li>
				<li>Dans la colonne translit, la valeur ms affichera tous les signes pouvant √™tre translit√©r√©s par ms</li>
			</ul></div>
			<div class="en_lang"><ul>
				<li>Display all signs of which some value matches the search term</li>
				<li>Use commas to separate search terms and compare signs. For instance, in the Gardiner column, the serach term F31,F40 will display all graphemes that match F31 AND all graphemes that match F40</li>
				<li>In the Gardiner column, the search term Aa1 Z4 (or Aa1+Z4 - any separator is valid except the comma) will only display the group made of Aa1 followed by Z4</li>
				<li>In the M√¥ller column, the search term XXXIX will display ligature XXXIX in M√∂ller's paleography - which is equivalent to 575+575 (t t), or X1+X1 in the Gardiner column</li>
				<li>In the translit(eration) column, the search term ms will display all signs that can be transliterated as ms.</li>
			</ul></div>
			
		</td></tr>
		<tr><td style="vertical-align:top"><input type="checkbox" id="check_matchcontains"></td><td><b class="fr_lang">Correspondance-contient</b><b class="en_lang">"Contains"-match</b>
			<div class="fr_lang"><ul>
                            <li>Affiche tous les signes dont une des valeurs correspond au terme de recherche, ou tous les <b>groupes et ligatures</b> dont un des signes correspond au terme de recherche</li>
                            <li>Utiliser des virgules pour s√©parer plusieurs termes de recherche √† des fins de comparaison. Par exemple, dans la colonne Gardiner, la valeur F31,F40 filtrera sur les graph√®mes correspondants √† F31, les graph√®mes correspondants √† F40, et tout groupe contenant l'un de ces deux graph√®mes</li>
                            <li>Ce mode de recherche permet d'afficher ais√©ment les groupes et ligatures contenant un ou plusieurs signe(s) donn√©(s).</li>
                            <li>Pour les colonnes Gardiner ou M√∂ller, le terme de recherche doit correspondre √† un code existant - dans la colonne Gardiner, G n'affichera donc PAS les signes Gxx des oiseaux</li>			
                            <li>Le comportement de cette recherche diff√®re un peu pour la colonne translit√©ration: tous les signes ou groupes dont une translit√©ration contient le terme de recherche seront affich√©es.</li>
			</ul></div>
			<div class="en_lang"><ul>
                            <li>Display all signs of which some value matches the search term, as well as <b>groups and ligatures</b> of which a sign matches the search term.</li>
                            <li>Use commas to separate several search terms for comparison purposes. For instance, in the Gardiner column, the search term F31,F40 will display all graphemes for sign F31, all graphemes for sign F40, as well as all groups containing either F31 or F40.</li>
                            <li>This search mode is designed to easily display groups and ligatures containing one or more given signs.</li>
                            <li>For the Gardiner and M√∂ller columns, the search term must match an existing code - in the Gardiner column, G will NOT display all Gxx bird signs.</li>			
                            <li>The behaviour of this search mode is slightly different for the transliteration column: in this case, all signs or groups of which some transliteration CONTAINS the search term will be displayed.</li>
			</ul></div>
		</td></tr>
		<tr><td style="vertical-align:top"><input type="checkbox" id="check_matchregex"></td><td><b class="fr_lang">Correspondance-regex</b><b class="en_lang">Regex match</b>
			<div class="fr_lang"><ul>
                            <li>Affiche tous les signes dont une des valeurs correspond √† l'expression r√©guli√®re encod√©e.</li>
                            <li>La virgule ne peut pas √™tre utilis√©e ici pour s√©parer plusieurs expressions r√©guli√®res (utiliser la syntaxe regex usuelle de l'op√©rateur OU ( | ) ).</li>
                            <li>Par exemple, dans la colonne Gardiner, ^G affichera tout signe ou groupe commen√ßant par un oiseau.</li>
                            <li>Dans la colonne Gardiner, ^G[0-9]*[a-zA-Z]*$ affichera tous les signes d'oiseaux  mais pas les groupes commen√ßant par un oiseau.</li>
                            <li>Dans la colonne Gardiner,  ^G| G affichera tous les signes ou groupes contenant un oiseau</li>
                            <li>Dans la colonne M√∂ller, ^[^0-9] affichera tous les codes M√∂ller en chiffres romains - c√†d les ligatures et groupes identifi√©s comme tels dans sa pal√©ographie</li>
			</ul></div>
			<div class="en_lang"><ul>
                            <li>Display all signs of which some values matches the regex specified as search term  (use the javascript-flavour of the regex syntax).</li>
                            <li>Commas can NOT be used here to separate several regexes ;  the usual pipe-based regex OR syntax ( | ) should be used instead.</li>
                            <li>For instance, in the Gardiner column, ^G will display all bird signs as well as groups starting with a bird.</li>
                            <li>In the Gardiner column, ^G[0-9]*[a-zA-Z]*$ will display all bird signs but not groups starting with a bird.</li>
                            <li>In the Gardiner column,  ^G| G will display all bird signs as well as groups CONTAINING a bird.</li>
                            <li>In the M√∂ller column, ^[^0-9] will display all Roman numerals M√∂ller codes - i.e. ligatures and groups classified as such in M√∂ller's paleography.</li>
			</ul></div>
		</td></tr>
		<tr><td style="vertical-align:top"><input type="checkbox" id="check_filtersEXCLUSIVE"></td><td><b class="fr_lang">Filtres EXCLUSIFS</b><b class="en_lang">EXCLUSIVE filters</b>
			<div class="fr_lang"><ul>
                            <li>Un seul filtre peut √™tre appliqu√© √† la fois (sur le code Gardiner OU M√∂ller OU la translit√©ration).</li>
							<li>D√®s lors, introduire du texte dans un des filtres effacera le contenu des deux autres filtres.</li>
 			</ul></div>
			<div class="en_lang"><ul>
                            <li>Only one filter (either on Gardiner codes OR on M√∂ller codes OR on transliteration) can be applied at any given.</li>
                            <li>Hence typing any text in a filter will erase the content of the other filters.</li>
			</ul></div>
		</td></tr>		
		<tr><td style="vertical-align:top"><input type="checkbox" id="check_filtersAND"></td><td><b class="fr_lang">Filtres ET</b><b class="en_lang">AND filters</b>
			<div class="fr_lang"><ul>
                            <li>Les conditions d√©crites par les filtres sont appliqu√©es cumulativement (ET logique): les lignes affich√©es  doivent r√©pondre √† toutes les conditions.</li>
 			</ul></div>
			<div class="en_lang"><ul>
                            <li>Filters are ANDed - i.e. applied cumulatively : displayed lines are those that match all filters.</li>
			</ul></div>
		</td></tr>
		<tr><td style="vertical-align:top"><input type="checkbox" id="check_filtersOR" checked></td><td><b class="fr_lang">Filtres OU</b><b class="en_lang">OR filters</b>
			<div class="fr_lang"><ul>
                            <li>OU logique : les lignes affich√©es sont celles qui r√©pondent √† au moins une des conditions.</li>
 			</ul></div>
			<div class="en_lang"><ul>
                            <li>Filters are ORed : displayed lines are those that match at least one of the filters.</li>
			</ul></div>
		</td></tr>
		<tr><td><input type="checkbox" id="check_onlyfrequent"></td>
                    <td>
                        <span class="fr_lang">Seulement les signes fr√©quents</span><span class="en_lang">Only frequent signs</span>
                        <br/>
                        n Ramses &gt;=<input style="width: 8em" type="number" id="minFrequent" value="100"></td></tr>
		<tr><td><input type="checkbox" id="check_includeLigatures" checked></td>
                    <td>
                        <span class="fr_lang">Inclure les ligatures et groupements</span><span class="en_lang">Include ligatures and groups</span>
                    </td>
                </tr>
	</table>
</div>
<div class="topButtons">
	<div class="topButton" id="emptyAllDiv">
		<span class="tooltiptext">
			<div class="fr_lang">Vider tous les filtres / r√©initialiser</div>
			<div class="en_lang">Empty all filters / reset</div>
		</span>
		<img src="imgstatic/Sw.svg" onclick="emptyAll()"/>
	</div>
	<div class="topButton" id="openThanksDiv">
		<span class="tooltiptext">
			<div class="fr_lang">Remerciements & r√©f√©rences & √† propos de NKHP</div>
			<div class="en_lang">Thanks & references & about NKHP</div>
		</span>
		<img src="imgstatic/pray.svg" onclick="hideOrShowSidebar('thanks',true)"/>
	</div>
	<div class="topButton" id="openDrillDiv">
		<span class="tooltiptext">
			<div class="fr_lang">Exercices d'entra√Ænement</div>
			<div class="en_lang">Training exercises</div>
		</span>
		<img src="imgstatic/work.svg" onclick="hideOrShowSidebar('drill',true)"/>
	</div>
	<div class="topButton" id="openSettingsDiv">
		<span class="tooltiptext">
			<div class="fr_lang">Param√®tres & aide</div>
			<div class="en_lang">Settings & help</div>
		</span>
		<img src="imgstatic/settings.png" onclick="hideOrShowSidebar('settings',true)"/>
	</div>
</div>
<table border="1"><tbody><tr>
<!--STARTTDFORTEXTCATEG-->
XXXTDFORTEXTCATEGXXX
<!--ENDTDFORTEXTCATEG-->
<td class='checkforfornocolor'><input type='checkbox' onchange='changeNoColor()' id='check_nocolor'><span class='fr_lang'>Censurer les couleurs</span><span class='en_lang'>Censor colors</span></td></tr></tbody></table>
<script>
//--STARTSCRIPTFORTEXTCATEGCLASSES--
XXXSCRIPTFORTEXTCATEGCLASSESXXX
//--ENDSCRIPTFORTEXTCATEGCLASSES--
</script>
<table id="maintable" border="1">
<!--STARTMAINTABLECONTENT-->
XXXMAINTABLECONTENT
<!--ENDMAINTABLECONTENT-->
</table>
</div>
</body>
<script>
if (lazyLoadMethod=="VANILLA") {
	lazyLoadInstance.update();
}
function isMatch(searchString,dataToCompare,nSearchType,nField) {
	//dataToCompare is an array of values (for instance ["wrd","Hms"] with which searchString will be compared)
	//nSearchType=1 for exact, 2 for contains, 3 for regex
	//nField=1 for gardiner, 2 for M√∂ller, 3 for transliteration
	searchStrings=searchString.split(",");
	if ((nSearchType==1) || (nSearchType==2)) { 
		for (i=0;i<searchStrings.length;i++) {
			if (nField==1) {searchStrings[i]=searchStrings[i].replace(/[\W_]+/g," ").trim();};
			if (nField==2) {searchStrings[i]=searchStrings[i].replace(/[\W_]+/g,"+").trim();};
			if (nField==3) {searchStrings[i]=searchStrings[i].trim();};
		}
	}
	if (nSearchType==1) {
		bFound=false;
		for (i=0;i<dataToCompare.length;i++) {
			if (searchStrings.includes(dataToCompare[i])) {i=dataToCompare.length; bFound=true;}
		}
		return bFound;
	} else if (nSearchType==2) {
		bFound=false;
		for (i=0;i<dataToCompare.length;i++) {
			for (j=0;j<searchStrings.length;j++) {
				if ((dataToCompare[i]!="") && (searchStrings[j]!="")) {
					//now check if all "parts" of searchStrings[j] are in dataToCompare[i] - for transliteration, it's just string inclusion
					if (nField==3) {
						if (dataToCompare[i].includes(searchStrings[j])) {bFound=true; }
					} else {
						allPartsFound=true;parts=[];partsindata=[];
						if (nField==1) {parts=searchStrings[j].split(" ");partsindata=dataToCompare[i].split(" ");} else if (nField==2) {parts=searchStrings[j].split("+"); partsindata=dataToCompare[i].split("+");};
						for (k=0;k<parts.length;k++) {
							if (!partsindata.includes(parts[k])) {allPartsFound=false;}
						}
						if (allPartsFound) {bFound=true;}
					}
				}
			}
		}
		return bFound;
	} else if (nSearchType==3) {
		bFound=false;
		re=new RegExp(searchString);
		for (i=0;i<dataToCompare.length;i++) {
			if (re.test(dataToCompare[i])) {i=dataToCompare.length; bFound=true;}
		}
		return bFound;
	}
}
$.fn.dataTable.ext.search.push(function (settings, data, dataIndex) {
    var min = parseInt($("#minFrequent").val(),10);
    var isLigat=(data[13]=="(lig)");
    var nRamses = parseFloat(data[4]) || 0; 
    var blOnlyFrequent = $("#check_onlyfrequent")[0].checked;
    var blIncludeLigatures = $("#check_includeLigatures")[0].checked;
    nSearchType=0; // 1=exact, 2=contains, 3 = regex
    if ($("#check_matchexact")[0].checked) {nSearchType=1;}	else if ($("#check_matchcontains")[0].checked) {nSearchType=2;}	else if ($("#check_matchregex")[0].checked) {nSearchType=3;}
	nFilteringType=0	// 1 = exclusive, 2 = AND, 3 = OR
	if ($("#check_filtersEXCLUSIVE")[0].checked) {nFilteringType=1;} else if ($("#check_filtersAND")[0].checked) {nFilteringType=2;} else if ($("#check_filtersOR")[0].checked) {nFilteringType=3;}
    var searchGardi=$("#searchGardi").val();
    var searchM√∂ller=$("#searchM√∂ller").val();
    var searchMdc=$("#searchMdc").val();
    if (typeof(searchGardi)=="undefined") {searchGardi=""};
    if (typeof(searchM√∂ller)=="undefined") {searchM√∂ller=""};
    if (typeof(searchMdc)=="undefined") {searchMdc=""};
    searchMdc=translitUnicodeToMdc(searchMdc).replace("-","").replace(".","");
    if (blOnlyFrequent && (min>nRamses)) {return false;}
    if (isLigat && (!blIncludeLigatures)) {return false;}
	if ((searchGardi!="") || (searchM√∂ller!="") || (searchMdc!="")) {
		blResult=false;
		if (nFilteringType==2)  {blResult=true};
		if (searchGardi!="") {
			bl=isMatch(searchGardi,[data[0]],nSearchType,1);
			switch (nFilteringType) {
				case 1: blResult=bl;
				case 2: blResult=blResult && bl;
				case 3: blResult=blResult || bl;
			}
		}
		if (searchM√∂ller!="") {
			bl=isMatch(searchM√∂ller, data[1].replace("=",",").split(","),nSearchType,2);	//M√∂ller can be of the type 626,646=LXIII - we divide that into the array ["626","646","LXIII"]
			switch (nFilteringType) {
				case 1: blResult=bl;
				case 2: blResult=blResult && bl;
				case 3: blResult=blResult || bl;
			}
		}
		if (searchMdc!="") {
			bl=isMatch(searchMdc,data[12].split(","),nSearchType,3);
			switch (nFilteringType) {
				case 1: blResult=bl;
				case 3: blResult=blResult || bl;
				case 2: blResult=blResult && bl;
			}
		}
		return blResult;
    } else {
		return true;
    }
});

$('#maintable thead tr').clone(true).addClass('filters').appendTo('#maintable thead');

//initialize ht, i.e. a key-value javascript object with elements of the form 'UAT28_S_10_9_7783_3372_163_220':'A2', ... i.e. keys are hieratogram ids, while values are gardiner/mdc codes
//also initialize imageSources, i.e. e key-value javascript object with elements of the form 'UAT28_S_10_9_7783_3372_163_220':'img/UAT28_S_10_9_7783_3372_163_220.svg',
//i.e. keys are hieratogram ids, while values are the corresponding imgSrc (which may be URLs - absolute or relative - or base64 inline)
var ht={};
var imageSources={}
allHierDiv=$('.hier');
for (i=0;i<allHierDiv.length;i++) {
	ht[allHierDiv[i].getAttribute("id")]=allHierDiv[i].parentNode.parentNode.getAttribute("id").substring(3)
	sImg=$(allHierDiv[i]).children("img")[0].getAttribute("data-src");
	if (sImg==null) {sImg=$(allHierDiv[i]).children("img")[0].getAttribute("src");}	//already lazy-loaded for some reason
	imageSources[allHierDiv[i]["id"]]=sImg
}
var hg={};
//initialize hg, i.e a key-value javascript object with elements of the form 'A1+N35': 'g5.svg', i.e. keys are gardiner/mdc codes and values are image filenames
allTableRows=$("#maintable tr");
for (i=2;i<allTableRows.length;i++) {	//item 0 is table header, item 1 is filters
	sMdc=allTableRows[i].getAttribute("id").substring(3);
	sImg=$($(allTableRows[i]).children("td")[2]).children("img")[0].getAttribute("data-src");
	if (sImg==null) {sImg=$($(allTableRows[i]).children("td")[2]).children("img")[0].getAttribute("src");}	//already lazy-loaded for some reason
	hg[sMdc]=sImg.split("/")[1];
}

var datatable = $('#maintable').DataTable( {
    orderCellsTop: true,
    fixedHeader: true,
	"autoWidth": false,
	"drawCallback": doLazyLoad,
	"fnRowCallback": datatablesRowCallbackFunction,
    "dom": "iptl",
    fixedColumns: true,
	"columnDefs": [
		{ "width": "35px", "targets": [0,1] },
        { "width": "35px", "targets": 4, "type": "natural" },
		{ "width": "40px", "targets": [2, 5, 6, 7, 8, 9, 10], "orderable": false },
		{ "width": "50px", "targets": 3 },
        { "orderData": [11], "targets": 0 },
        { "targets": [11], "searchable": false, "visible": false    },
        { "targets": [12], "visible": false    },
		{ "targets": [13], "visible": false    }
	],
    initComplete: function() {
        var api=this.api();
        api.columns().eq(0).each(function (colIdx) {
            // Set the header cell to contain the input element
            var cell = $('.filters th').eq(
                $(api.column(colIdx).header()).index()
            );
            if (colIdx==0) {
              $(cell).html('<input id="searchGardi" type="text" style="width: 80px;" placeholder="ex:F31,F40,W17" />');   
            } else if (colIdx==1) {
               $(cell).html('<input id="searchM√∂ller" type="text" style="width: 80px;" placeholder="ex:XXIX,XXX" />'); 
            } else if (colIdx==3) {
               $(cell).html('<input id="searchMdc" type="text" style="width: 80px;" placeholder="ex:ms,Aw" />'); 
            } else {
                $(cell).html(''); 
            }
        });
    }
});

function updateDisplay() {
	datatable.draw();
	setDisplayedURL(computeURL());
}

$('#searchGardi').keyup(function () {
	blExclusiveMode = ($("#check_filtersEXCLUSIVE")[0].checked);
	if (blExclusiveMode) {
		$('#searchM√∂ller').val('');
		$('#searchMdc').val('');
	}
	updateDisplay();
});

$('#searchM√∂ller').keyup(function () {
	blExclusiveMode = ($("#check_filtersEXCLUSIVE")[0].checked);
	if (blExclusiveMode) {
		$('#searchGardi').val('');
		$('#searchMdc').val('');
	}
    updateDisplay();
});

$('#searchMdc').keyup(function () {
	blExclusiveMode = ($("#check_filtersEXCLUSIVE")[0].checked);
	if (blExclusiveMode) {
		$('#searchGardi').val('');
		$('#searchM√∂ller').val('');
	}
    updateDisplay();
});

$('#check_matchexact, #check_matchcontains, #check_matchregex').change(function (event) {
    arr=["check_matchexact","check_matchcontains","check_matchregex"];
	curTarget=event.target.getAttribute("id");
	$("#"+curTarget)[0].checked=true;
	for (i=0;i<arr.length;i++) {
		if (arr[i]!=curTarget) { 
			$("#"+arr[i])[0].checked=false; 
		}
	}
	updateDisplay();
});

$('#check_filtersEXCLUSIVE, #check_filtersAND, #check_filtersOR').change(function (event) {
    arr=["check_filtersEXCLUSIVE","check_filtersAND","check_filtersOR"];
	curTarget=event.target.getAttribute("id");
	$("#"+curTarget)[0].checked=true;
	for (i=0;i<arr.length;i++) {
		if (arr[i]!=curTarget) { 
			$("#"+arr[i])[0].checked=false; 
		}
	}
	//if we are entering exclusive mode, no more than one of the filter text fields should be filled
	if ($("#check_filtersEXCLUSIVE")[0].checked) {
		if ($("#searchGardi").val()!="") {
			$('#searchM√∂ller').val('');
			$('#searchMdc').val('');
		} else if ($("#searchM√∂ller").val()!="") {
			$('#searchMdc').val('');
		}
	}
	
	updateDisplay();
});

$('#minFrequent, #check_onlyfrequent, #check_includeLigatures').change(function () {
    updateDisplay();
});


</script>
</html>